/*
 * lib/pg_statsinfo.sql.in
 *
 * Copyright (c) 2010-2011, NIPPON TELEGRAPH AND TELEPHONE CORPORATION
 */

-- Adjust this setting to control where the objects get created.
SET search_path = public;

BEGIN;

SET LOCAL client_min_messages = WARNING;

CREATE SCHEMA statsinfo;
REVOKE ALL ON SCHEMA statsinfo FROM PUBLIC;

--
-- statsinfo.sample()
--
CREATE FUNCTION statsinfo.sample() RETURNS void
AS 'MODULE_PATHNAME', 'statsinfo_sample'
LANGUAGE C STRICT;

--
-- statsinfo.activity()
--
CREATE FUNCTION statsinfo.activity(
	OUT idle			float8,
	OUT idle_in_xact	float8,
	OUT waiting			float8,
	OUT running			float8,
	OUT client			text,
	OUT pid				integer,
	OUT start			timestamptz,
	OUT duration		float8,
	OUT query			text
)
AS 'MODULE_PATHNAME', 'statsinfo_activity'
LANGUAGE C STRICT;

--
-- statsinfo.snapshot()
--
CREATE FUNCTION statsinfo.snapshot(comment text) RETURNS void
AS 'MODULE_PATHNAME', 'statsinfo_snapshot'
LANGUAGE C;

CREATE FUNCTION statsinfo.snapshot() RETURNS void
AS 'MODULE_PATHNAME', 'statsinfo_snapshot'
LANGUAGE C;

--
-- statsinfo.maintenance()
--
CREATE FUNCTION statsinfo.maintenance(repository_keep_period timestamptz) RETURNS void
AS 'MODULE_PATHNAME', 'statsinfo_maintenance'
LANGUAGE C;

--
-- statsinfo.tablespaces()
--
CREATE FUNCTION statsinfo.tablespaces(
	OUT oid oid,
	OUT name text,
	OUT location text,
	OUT device text,
	OUT avail bigint,
	OUT total bigint,
	OUT spcoptions text[])
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'statsinfo_tablespaces'
LANGUAGE C STRICT;

CREATE VIEW statsinfo.tablespaces AS
	SELECT * FROM statsinfo.tablespaces();

--
-- statsinfo.restart()
--
CREATE FUNCTION statsinfo.restart() RETURNS text
AS 'MODULE_PATHNAME', 'statsinfo_restart'
LANGUAGE C;

--
-- statsinfo.cpustats()
--
CREATE FUNCTION statsinfo.cpustats
(
	OUT cpu_id		text,
	OUT cpu_user	bigint,
	OUT cpu_system	bigint,
	OUT cpu_idle	bigint,
	OUT cpu_iowait	bigint
)
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'statsinfo_cpustats'
LANGUAGE C STRICT;

--
-- statsinfo.devicestats()
--
CREATE FUNCTION statsinfo.devicestats
(
	OUT device_major		text,
	OUT device_minor		text,
	OUT device_name			text,
	OUT device_readsector	bigint,
	OUT device_readtime		bigint,
	OUT device_writesector	bigint,
	OUT device_writetime	bigint,
	OUT device_ioqueue		bigint,
	OUT device_iototaltime	bigint,
	OUT device_tblspaces	name[]
)
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'statsinfo_devicestats'
LANGUAGE C STRICT;

--
-- statsinfo.profile()
--
CREATE FUNCTION statsinfo.profile
(
	OUT processing			text,
	OUT execute				bigint,
	OUT total_exec_time		double precision
)
RETURNS SETOF record
AS 'MODULE_PATHNAME', 'statsinfo_profile'
LANGUAGE C STRICT;

COMMIT;
